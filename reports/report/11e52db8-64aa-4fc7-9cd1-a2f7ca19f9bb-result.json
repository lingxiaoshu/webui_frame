{"name": "登录密码错误", "status": "broken", "statusDetails": {"message": "TypeError: to_capabilities() missing 1 required positional argument: 'self'", "trace": "browser_name = 'chrome'\n\n    @pytest.fixture(scope= 'session', autouse= True)\n    def init_driver(browser_name):\n        # 实例化driver对象\n>       GlobalDriver.driver = InitDriver(browser_name, remote_url='http://127.0.0.1:4444/wb/hub')   # 生产driver对象\n\nconftest.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.driver.InitDriver object at 0x00000222350B5DD8>\nbrowser = 'chrome', remote_url = 'http://127.0.0.1:4444/wb/hub'\n\n    def __init__(self, browser: str,remote_url=None):\n        # grid 去调用操作系统的浏览器的话，remote_url\n        self.logger = GetLogger().get_logger()\n        if remote_url == None:\n            # 适配不同浏览器\n            if browser.lower() == 'chrome':\n                self.driver = webdriver.Chrome()\n            elif browser.lower() == 'firefox':\n                self.driver = webdriver.Firefox()\n            elif browser.lower() == 'ie':\n                self.driver = webdriver.Ie()\n            else:\n                self.logger.error('不支持的浏览器类型{}'.format(browser))\n                raise Exception('不支持的浏览器类型{}'.format(browser))\n        else:   # 需要grid去执行\n            if browser.lower() == 'chrome':\n                options = webdriver.ChromeOptions\n            elif browser.lower() == 'firefox':\n                options = webdriver.FirefoxOptions\n            elif browser.lower() == 'ie':\n                options = webdriver.IeOptions\n            elif browser.lower() == 'edge':\n                # pip install msedge-selenium-tools\n                options = EdgeOptions()\n            else:\n    \n                self.logger.error('不支持的浏览器类型{}'.format(browser))\n                raise Exception('不支持的浏览器类型{}'.format(browser))\n>           self.driver = webdriver.Remote(remote_url, options.to_capabilities(), keep_alive=True)\nE           TypeError: to_capabilities() missing 1 required positional argument: 'self'\n\ncommon\\driver.py:51: TypeError"}, "description": "\n\n    :param case_name:\n    :param case: 每条测试用例的详细信息\n    :return:\n    ", "parameters": [{"name": "browser_name", "value": "'chrome'"}, {"name": "case_name", "value": "'登录密码错误'"}, {"name": "case", "value": "{'name': '登录密码错误', 'action': '/keyword/actions/buyer_login.yml', 'params': {'username': 'yaoyao', 'password': 'yaoyao'}, 'validate': [{'type': 'page_contains', 'expect': '账号密码错误'}]}"}], "start": 1678095003564, "stop": 1678095003564, "uuid": "9482ca1c-ef26-4a46-b8fc-756426912e55", "historyId": "4790e7ae57122840edc3042a99d5cb62", "testCaseId": "b87f68a39ee27b934b65622a6d0e9791", "fullName": "keyword.actions.keyword_run#test_keyword", "labels": [{"name": "parentSuite", "value": "keyword.actions"}, {"name": "suite", "value": "keyword_run"}, {"name": "host", "value": "LXSMI"}, {"name": "thread", "value": "7868-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "keyword.actions.keyword_run"}]}